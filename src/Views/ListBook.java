/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Duc Dung Dan
 */
public class ListBook extends javax.swing.JPanel {

    /**
     * Creates new form ListBook
     */
    public ListBook() {
        initComponents();
    }
    
    public JPanel getPanelListBook() {
        return listBook;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        edit = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        rent = new javax.swing.JMenuItem();
        listBook = new javax.swing.JPanel();
        imageBook = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        company = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        country = new javax.swing.JLabel();
        value = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        content = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableListBook = new javax.swing.JTable();
        inputSearch = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        next = new javax.swing.JButton();
        prev = new javax.swing.JButton();
        pageBook = new javax.swing.JLabel();
        typeSearch = new javax.swing.JComboBox();
        addBook = new javax.swing.JButton();

        edit.setText("Sửa");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPopupMenu1.add(edit);

        delete.setText("Xóa");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPopupMenu1.add(delete);

        rent.setText("Thêm vào giỏ hàng");
        rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentActionPerformed(evt);
            }
        });
        jPopupMenu1.add(rent);

        listBook.setBackground(new java.awt.Color(233, 235, 238));

        name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        name.setForeground(new java.awt.Color(255, 0, 102));
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        author.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        author.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        author.setMaximumSize(new java.awt.Dimension(20, 20));
        author.setMinimumSize(new java.awt.Dimension(165, 21));

        company.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        company.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        year.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        year.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        type.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        type.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        country.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        country.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        value.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        value.setForeground(new java.awt.Color(51, 255, 51));
        value.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        content.setColumns(20);
        content.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        content.setLineWrap(true);
        content.setRows(5);
        content.setWrapStyleWord(true);
        content.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        content.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        content.setEnabled(false);
        jScrollPane3.setViewportView(content);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        jLabel1.setText("Library online CONVENIENT © 2016");

        jScrollPane1.setBackground(new java.awt.Color(233, 235, 238));

        tableListBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Tên sách", "Tác giả", "Thể loại", "Số lượng", "Tiền thuê"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableListBook.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableListBook.setGridColor(new java.awt.Color(233, 235, 238));
        tableListBook.getTableHeader().setReorderingAllowed(false);
        tableListBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableListBookMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableListBook);
        if (tableListBook.getColumnModel().getColumnCount() > 0) {
            tableListBook.getColumnModel().getColumn(0).setResizable(false);
            tableListBook.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableListBook.getColumnModel().getColumn(1).setResizable(false);
            tableListBook.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableListBook.getColumnModel().getColumn(2).setResizable(false);
            tableListBook.getColumnModel().getColumn(2).setPreferredWidth(119);
            tableListBook.getColumnModel().getColumn(3).setResizable(false);
            tableListBook.getColumnModel().getColumn(3).setPreferredWidth(100);
            tableListBook.getColumnModel().getColumn(4).setResizable(false);
            tableListBook.getColumnModel().getColumn(4).setPreferredWidth(70);
            tableListBook.getColumnModel().getColumn(5).setResizable(false);
            tableListBook.getColumnModel().getColumn(5).setPreferredWidth(85);
        }

        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Search.png"))); // NOI18N
        search.setContentAreaFilled(false);
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/next.png"))); // NOI18N
        next.setContentAreaFilled(false);
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        prev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/prev.png"))); // NOI18N
        prev.setBorderPainted(false);
        prev.setContentAreaFilled(false);
        prev.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        pageBook.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        pageBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageBook.setText("0");

        typeSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "id", "Tên sách", "Tác giả", "Thể loại" }));

        addBook.setText("New");
        addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listBookLayout = new javax.swing.GroupLayout(listBook);
        listBook.setLayout(listBookLayout);
        listBookLayout.setHorizontalGroup(
            listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(listBookLayout.createSequentialGroup()
                        .addComponent(addBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(typeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(listBookLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(listBookLayout.createSequentialGroup()
                                .addComponent(prev, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pageBook, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listBookLayout.createSequentialGroup()
                        .addComponent(imageBook, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(company, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(country, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(author, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listBookLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addGap(24, 24, 24))
        );
        listBookLayout.setVerticalGroup(
            listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listBookLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(typeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(listBookLayout.createSequentialGroup()
                        .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(listBookLayout.createSequentialGroup()
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(listBookLayout.createSequentialGroup()
                                        .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(imageBook, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(listBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pageBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(prev))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        BookController.nextTableListBooks(tableListBook, pageBook);
    }//GEN-LAST:event_nextActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        BookController.prevTableListBooks(tableListBook, pageBook);
    }//GEN-LAST:event_prevActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        BookController.searchTableListBooks(tableListBook, pageBook, inputSearch.getText() == null?"":inputSearch.getText(), typeSearch.getSelectedItem().toString());
    }//GEN-LAST:event_searchActionPerformed

    private void tableListBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListBookMouseClicked
        DefaultTableModel model = (DefaultTableModel) tableListBook.getModel();
        int selectRow = tableListBook.getSelectedRow();
        if (selectRow != -1) {
            try {
                BookController.viewBook((Number) tableListBook.getValueAt(selectRow, 0), name, author, content, company, year, type, value, country, imageBook);
            } catch (SQLException ex) {
                Logger.getLogger(ListBook.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tableListBookMouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableListBook.getModel();
        int selectRow = tableListBook.getSelectedRow();
        if (selectRow != -1) {
            BookController.viewEditBook((Number) tableListBook.getValueAt(selectRow, 0));
        }
    }//GEN-LAST:event_editActionPerformed

    private void rentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableListBook.getModel();

        int selectRow = tableListBook.getSelectedRow();
        if (selectRow != -1) {
            
            String question = "Bạn muốn mượn đầu sách có id = " + model.getValueAt(selectRow, 0).toString();
            if (JOptionPane.showConfirmDialog(null, question, "Thông báo", 2) == 0) {
                RentBookController.rentBook((Number) model.getValueAt(selectRow, 0), tableListBook, selectRow);
            }
        }
    }//GEN-LAST:event_rentActionPerformed

    private void tableListBookMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListBookMouseReleased
        DefaultTableModel model = (DefaultTableModel) tableListBook.getModel();
        int selectRow = tableListBook.getSelectedRow();
        if (selectRow != -1 && evt.isPopupTrigger()) {
            jPopupMenu1.show(tableListBook, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tableListBookMouseReleased

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed
        Controllers.BookController.viewNewBook();
    }//GEN-LAST:event_addBookActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableListBook.getModel();
        int selectRow = tableListBook.getSelectedRow();
        if (selectRow != -1) {
            String question = "Bạn muốn xóa đầu sách có id = " + model.getValueAt(selectRow, 0).toString();
            if (JOptionPane.showConfirmDialog(null, question, "Thông báo", 2) == 0) {
                BookController.delete((Number) model.getValueAt(selectRow, 0), tableListBook, selectRow);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addBook;
    private javax.swing.JLabel author;
    private javax.swing.JLabel company;
    public static javax.swing.JTextArea content;
    private javax.swing.JLabel country;
    public javax.swing.JMenuItem delete;
    public javax.swing.JMenuItem edit;
    public javax.swing.JLabel imageBook;
    public javax.swing.JTextField inputSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JPanel listBook;
    public javax.swing.JLabel name;
    private javax.swing.JButton next;
    public static javax.swing.JLabel pageBook;
    private javax.swing.JButton prev;
    private javax.swing.JMenuItem rent;
    private javax.swing.JButton search;
    public static javax.swing.JTable tableListBook;
    private javax.swing.JLabel type;
    public javax.swing.JComboBox typeSearch;
    private javax.swing.JLabel value;
    private javax.swing.JLabel year;
    // End of variables declaration//GEN-END:variables
}
